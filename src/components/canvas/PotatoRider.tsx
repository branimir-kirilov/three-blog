/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.11 public/models/bike/bike.glb
*/

import React, { useRef, useState } from 'react'
import { useCursor, useGLTF } from '@react-three/drei'
import { useRouter } from 'next/navigation'
import { editable as e } from '@theatre/r3f'

export function PotatoRider(props) {
  const { nodes, materials } = useGLTF('./potatorider.glb')
  const mesh = useRef(null)
  const router = useRouter()
  const [hovered, hover] = useState(false)

  useCursor(hovered)

  return (
    <e.group {...props} dispose={null} theatreKey='potato-theathre-key'>
      <mesh
        ref={mesh}
        scale={[100, 74.6, 100]}
        onClick={() => router.push('/blob')}
        onPointerOver={() => hover(true)}
        onPointerOut={() => hover(false)}
        name='_100Avatars_188_CoolPotato'
        geometry={nodes._100Avatars_188_CoolPotato.geometry}
        material={materials._188_CoolPotato}
        morphTargetDictionary={nodes._100Avatars_188_CoolPotato.morphTargetDictionary}
        morphTargetInfluences={nodes._100Avatars_188_CoolPotato.morphTargetInfluences}
        position={[-0.06, -0.26, 0.09]}
        rotation={[Math.PI, -0.05, Math.PI]}
      />
      <mesh geometry={nodes['Node-Mesh'].geometry} material={materials.mat17} />
      <mesh geometry={nodes['Node-Mesh_1'].geometry} material={materials.mat21} />
      <mesh geometry={nodes['Node-Mesh_2'].geometry} material={materials.mat23} />
      <mesh geometry={nodes['Node-Mesh_3'].geometry} material={materials.mat22} />
      <mesh geometry={nodes['Node-Mesh_4'].geometry} material={materials.mat14} />
      <mesh geometry={nodes['Node-Mesh_5'].geometry} material={materials.mat25} />
      <mesh geometry={nodes['Node-Mesh_6'].geometry} material={materials.mat13} />
      <mesh geometry={nodes['Node-Mesh_7'].geometry} material={materials.mat24} />
      <mesh geometry={nodes['Node-Mesh_8'].geometry} material={materials.mat8} />
      <mesh geometry={nodes['Node-Mesh_9'].geometry} material={materials.mat12} />
      <mesh geometry={nodes['Node-Mesh_10'].geometry} material={materials.mat10} />
    </e.group>
  )
}

useGLTF.preload('./potatorider.glb')
